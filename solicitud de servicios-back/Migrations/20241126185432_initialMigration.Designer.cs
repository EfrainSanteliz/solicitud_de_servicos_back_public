// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using solicitud_de_servicios_back.Models;

#nullable disable

namespace solicitud_de_servicios_back.Migrations
{
    [DbContext(typeof(UserContextPlasalcees))]
    [Migration("20241126185432_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("solicitud_de_servicios_back.Models.ConActivosFijos", b =>
                {
                    b.Property<int>("ActivoFijoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivoFijoID"));

                    b.Property<int?>("AFBienMuebleID")
                        .HasColumnType("int");

                    b.Property<string>("AFClave")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("AFCuentaContableID")
                        .HasColumnType("int");

                    b.Property<string>("AFDatosAdicionales")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AFDescripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("AFDonacionValuacion")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int?>("AFEmpleadoID")
                        .HasColumnType("int");

                    b.Property<byte>("AFEstatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("AFFactura")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("AFFechaAsignacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("AFFechaCancelacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("AFFechaDonacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("AFFechaFactura")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("AFFechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("AFFolio")
                        .HasColumnType("int");

                    b.Property<string>("AFMarca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AFModelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AFNoSerie")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("AFNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AFObservaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("AFPropietarioBienId")
                        .HasColumnType("int");

                    b.Property<int>("AFSucursalId")
                        .HasColumnType("int");

                    b.Property<int>("AFTipoActivoFijoID")
                        .HasColumnType("int");

                    b.Property<string>("AFValorBien")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<decimal?>("AFValorDonacion")
                        .HasColumnType("decimal(12,2)");

                    b.Property<bool?>("AFesDonacion")
                        .HasColumnType("bit");

                    b.Property<int>("DireccionICEESID")
                        .HasColumnType("int");

                    b.HasKey("ActivoFijoID");

                    b.ToTable("ConActivosFijos");
                });

            modelBuilder.Entity("solicitud_de_servicios_back.Models.DireccionesICEES", b =>
                {
                    b.Property<int>("DireccionICEESID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DireccionICEESID"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("CenCostosId")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("SubgrupoID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SucursalId")
                        .HasColumnType("int");

                    b.HasKey("DireccionICEESID");

                    b.ToTable("DireccionesICEES");
                });

            modelBuilder.Entity("solicitud_de_servicios_back.Models.NomEmpleados", b =>
                {
                    b.Property<int>("EmpleadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoID"));

                    b.Property<int?>("ActividadPresupuestal")
                        .HasColumnType("int");

                    b.Property<long?>("AfiliacionIsssteson")
                        .HasColumnType("bigint");

                    b.Property<string>("Antiguedad")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("BancoId")
                        .HasColumnType("int");

                    b.Property<byte>("Carrera")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CatPuestoID")
                        .HasColumnType("int");

                    b.Property<string>("ClaveSindical")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool?>("DeclaracionPatrimonial")
                        .HasColumnType("bit");

                    b.Property<int>("DepartamentoID")
                        .HasColumnType("int");

                    b.Property<bool?>("EnviarCorreoFalta")
                        .HasColumnType("bit");

                    b.Property<bool?>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaVencimLicencia")
                        .HasColumnType("datetime2");

                    b.Property<long?>("NSS")
                        .HasColumnType("bigint");

                    b.Property<int>("NomEmpAdscripcionID")
                        .HasColumnType("int");

                    b.Property<string>("NomEmpCURP")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("NomEmpClave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomEmpClaveAntesRHGE")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NomEmpClaveRHGE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("NomEmpDatosDireccionID")
                        .HasColumnType("bigint");

                    b.Property<byte>("NomEmpEdoCivil")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("NomEmpEstatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NomEmpFechaAltaIsssteson")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NomEmpFechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NomEmpFechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NomEmpFechaTerminacion")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("NomEmpFoto")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte?>("NomEmpGradoDominio")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("NomEmpIngresoGobEdo")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("NomEmpMarco")
                        .HasColumnType("tinyint");

                    b.Property<string>("NomEmpMaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NomEmpNivelEstudioID")
                        .HasColumnType("int");

                    b.Property<string>("NomEmpNoCuentaBancaria")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NomEmpNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NomEmpNumeroPension")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NomEmpPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NomEmpPuestoID")
                        .HasColumnType("int");

                    b.Property<string>("NomEmpRFC")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte>("NomEmpSexo")
                        .HasColumnType("tinyint");

                    b.Property<int>("NomEmpTabuladorID")
                        .HasColumnType("int");

                    b.Property<string>("NomEmpTabuladorSubNivelClave")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("NomEmpTieneHijos")
                        .HasColumnType("bit");

                    b.Property<byte?>("NomEmpTipoAnalisis")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NomEmpTipoNomina")
                        .HasColumnType("tinyint");

                    b.Property<string>("NumEmpCuentaClave")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("NumLicenciaConducir")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<long?>("NumeroFonacot")
                        .HasColumnType("bigint");

                    b.Property<int?>("RecursoID")
                        .HasColumnType("int");

                    b.Property<bool?>("RequiereLicencia")
                        .HasColumnType("bit");

                    b.Property<int>("SucursalId")
                        .HasColumnType("int");

                    b.Property<string>("TipoSangre")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("EmpleadoID");

                    b.HasIndex("NomEmpAdscripcionID");

                    b.ToTable("NomEmpleados");
                });

            modelBuilder.Entity("solicitud_de_servicios_back.Models.NomEmpleados", b =>
                {
                    b.HasOne("solicitud_de_servicios_back.Models.DireccionesICEES", "DireccionesICEES")
                        .WithMany("NomEmpleados")
                        .HasForeignKey("NomEmpAdscripcionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DireccionesICEES");
                });

            modelBuilder.Entity("solicitud_de_servicios_back.Models.DireccionesICEES", b =>
                {
                    b.Navigation("NomEmpleados");
                });
#pragma warning restore 612, 618
        }
    }
}
